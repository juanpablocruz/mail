<style>
.partials-dest {
  position:relative;
  min-width:10em;
  min-height:10em;
  z-index: 0;
  display: inline-block;
  vertical-align: top;
}
.partials-dest ul {
  padding: 0;
  list-style: none;
}
.partialList {
  border-right: 2px solid #999;
  margin-right: 1em;
}
.partial-element {
  z-index: 2;
  cursor: hand;
}
.partialList .partial-element div{
  display: inline-block;
}
.partialList .render-element-partial {
  font-size: 30%;
  width: 3rem;
}
.render-element-partial img {
  width: 100%;
}
.partialList .render-element-partial h1,
.partialList .render-element-partial h2,
.partialList .render-element-partial h3,
.partialList .render-element-partial h4,
.partialList .render-element-partial h5 {
  font-size: 30%;
}
.partials-added .partial-name {
  display: none;
}
.partials-added {
  min-width: 70%;
  padding: 1em;
}
.hovering {
  border: 5px dashed #999999;
}
</style>
<?php

$form = $this->form;
// $form->setAttribute('action', $this->url());
$form->prepare();
echo $this->form()->openTag($form);
echo $this->formCollection($form);
?>
<div class="partialList partials-dest">
  <ul>
<?php
foreach($form->partialListData as $key => $value) {
  echo "<li class='partial-element' attr-id='".$value->getId()."'>
        <div class='render-element-partial'>"
        .
        $value->getContent()
        .
        "</div><div class='partial-name'>"
        .
        $value->getName()
        ."</div></li>";
}
?>
</ul>
</div>

<div class="partials-dest partials-added" id="partials-added">
  <ul></ul>
</div>
<?php
// \Zend\Debug\Debug::dump($form->partialListData);
echo $this->form()->closeTag();

$this->inlineScript()->captureStart();
echo <<<JS

(function(document) {
  "use strict";

  var draggable = document.querySelectorAll('.partial-element'),
      draggableCount = draggable.length,
      i, originalPos,
      targetDest = document.querySelectorAll('.partials-dest'),
      dropzone = document.querySelector('#partials-added');

  function startDrag(evt) {
    evt.preventDefault();
    originalPos = {x:this.offsetLeft, y:this.offsetTop};
    this.style.position = "absolute";
    var diffX = evt.clientX - this.offsetLeft,
    diffY = evt.clientY - this.offsetTop,
    that = this;
    console.log(dropzone);
    dropzone.classList.toggle("hovering");


    function moveAlong(evt) {
        evt.preventDefault();
        var left = parseInt(evt.clientX - diffX);
        var top = parseInt(evt.clientY - diffY);
        that.style.left = left + 'px';
        that.style.top = top + 'px';
    }

    function stopDrag() {
        document.removeEventListener('mousemove', moveAlong);
        document.removeEventListener('mouseup', stopDrag);
        that.style.position = "relative";
        dropzone.classList.toggle("hovering");
        if(targetDest.length>0) {
          var inside = false;
          for(i = 0; i < targetDest.length && !inside; i++) {
            var tviw = targetDest[i].getBoundingClientRect();
            var eviw = that.getBoundingClientRect();
            var dX = tviw.x,
            dW = dX + tviw.width,
            dY = tviw.y,
            dH = dY + tviw.height,
            pX = eviw.x,
            pY = eviw.y;
            console.log(targetDest[i].classList);
            if(pX > dX && pX < dW &&
              pY > dY && pY < dH &&
              targetDest[i].classList.contains("partials-added")) {
                that.style.left = "0px";
                that.style.top = "0px";
                targetDest[i].querySelector("ul").appendChild(that.cloneNode(true));
                that
                inside = true;
                break;
              }
          }
          that.style.left = originalPos.x+"px";
          that.style.top = originalPos.y+"px";

      }
    }

    document.addEventListener('mouseup', stopDrag);
    document.addEventListener('mousemove', moveAlong);
    return false;
}

if (draggableCount > 0)
  for (i = 0; i < draggableCount; i ++)
    draggable[i].addEventListener('mousedown', startDrag);

}(document));
  $("#template").on("submit",function(e) {
    var partials = [];
    $("#partials-added").find("li").each(function(i,e){
      if($(e).attr("attr-id"))
        partials.push($(e).attr("attr-id"));
    });
    $("input[name='partialList']").val(JSON.stringify(partials));
  })

JS;
$this->inlineScript()->captureEnd();
